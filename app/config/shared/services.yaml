# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: true

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../../src/'
        exclude:
            - '../../src/**/Application/Command/*'
            - '../../src/**/Application/Query/*'
            - '../../src/**/Application/Hydrator/Accessor/*'
            - '../../src/**/Application/Hydrator/Mutator/*'
            - '../../src/**/Application/Hydrator/Metadata/*'
            - '../../src/**/Infrastructure/Persistence/*'
            - '../../src/**/Infrastructure/Exception/*'
            - '../../src/**/ValueObject/*'
            - '../../src/**/DTO/*'
            - '../../src/Shared/Infrastructure/Kernel.php'
    App\Shared\Domain\:
        resource: '../../src/Shared/Domain'
        autowire: false
    App\Shared\SharedBoundedContext\Domain\:
        resource: '../../src/Shared/SharedBoundedContext/Domain'
        autowire: false

    _instanceof:
        App\Shared\Application\Bus\Command\CommandHandlerInterface:
            tags:
                - { name: messenger.message_handler, bus: command.bus }
        App\Shared\Application\Bus\Query\QueryHandlerInterface:
            tags:
                - { name: messenger.message_handler, bus: query.bus }
        App\Shared\Application\Bus\Event\EventSubscriberInterface:
            tags:
                - { name: messenger.message_handler, bus: event.bus }
        App\Shared\Domain\Event\DomainEvent:
            tags: [ 'projects.domain_event' ]

    # @see MapperCompilerPass adds class names of all services, tagged with target value, as an argument
    App\Shared\Infrastructure\Service\DomainEventMapper:
        tags:
            - { name: projects.mapper, target_tag: projects.domain_event }

    Symfony\Component\PasswordHasher\Hasher\Pbkdf2PasswordHasher:
        arguments:
            $iterations: 100

    Symfony\Component\PasswordHasher\PasswordHasherInterface: '@Symfony\Component\PasswordHasher\Hasher\Pbkdf2PasswordHasher'

    App\Shared\Infrastructure\Service\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onException }

    App\Shared\Infrastructure\Service\LexikJwtAuthenticatorService:
        arguments:
            $path: '^/api/(?!.*(security)).*$'

